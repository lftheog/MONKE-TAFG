Create a new script called ColorChangeSystem.cs:
using System.Collections.Generic;
using UnityEngine;

public class ColorChangeSystem : MonoBehaviour
{
    public List<Color> colors; // List of available colors
    public Renderer leftHandRenderer; // Renderer for the left hand
    public Renderer rightHandRenderer; // Renderer for the right hand

    private int currentColorIndex = 0;

    void Start()
    {
        if (colors.Count > 0)
        {
            SetHandColor(colors[currentColorIndex]);
        }
    }

    void Update()
    {
        if (Input.GetButtonDown("Fire1")) // Replace with VR controller button
        {
            ChangeColor();
        }
    }

    void ChangeColor()
    {
        currentColorIndex = (currentColorIndex + 1) % colors.Count;
        SetHandColor(colors[currentColorIndex]);
    }

    void SetHandColor(Color color)
    {
        leftHandRenderer.material.color = color;
        rightHandRenderer.material.color = color;
    }
}

STOP COPYING HERE
Add the Script to a GameObject:

Create an empty GameObject in your scene and name it ColorChangeSystem.

Attach the ColorChangeSystem script to this GameObject.

Assign Hand Renderers:

Create or find the hand GameObjects in your VR setup (you should have GameObjects representing the left and right hands with Renderer components).

Drag the Renderer components of the left and right hand GameObjects to the leftHandRenderer and rightHandRenderer fields in the script component in the Inspector.

Define Color List:

In the Inspector, define the list of colors you want the player to cycle through. You can add colors by increasing the size of the colors list and selecting each color.

Adjust Input:

Update the input handling in the script to match your VR controller's button mapping. Input.GetButtonDown("Fire1") is a placeholder and should be replaced with the appropriate input for your VR setup.

Example Setup
For example, if you want to use Oculus VR controller inputs, you might replace Input.GetButtonDown("Fire1") with something like OVRInput.GetDown(OVRInput.Button.One).

That's it! You now have a basic color change system for your VR game. You can expand upon this by adding more customization options or effects. Let me know if you have any questions or need further assistance!
